version: '3'
configs:

  postgres_exporter_config:
    file: ./queries.yaml

services:

  postgres-exporter-pgserver94:
    image: wrouesnel/postgres_exporter:latest
    container_name: 'stage-postgres-exporter'  
    configs:
      - source: postgres_exporter_config
        target: /etc/postgres_exporter/queries.yaml
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - frontend   
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:@localhost:5432/postgres?sslmode=disable
      - PG_EXPORTER_EXTEND_QUERY_PATH=/etc/postgres_exporter/queries.yaml

  prometheus:
    image: prom/prometheus
    container_name: 'stage-prometheus'
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'  
    - '--storage.tsdb.path=/prometheus'
    - '--web.console.libraries=/usr/share/prometheus/console_libraries'
    - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - frontend
    ports:
      - 9090:9090

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: 'stage-node-exporter'  
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command: 
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - frontend
    restart: always
    deploy:
      mode: global



  grafana:
    image: grafana/grafana
    container_name: 'stage-grafana'
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/config.ini:/etc/grafana/config.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - frontend
    ports:
    - 3000:3000

  alertmanager:
    image: prom/alertmanager:v0.23.0
    container_name: 'stage-alermanager'
    ports:
    - "9093:9093"
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command: 
    - '--config.file=/etc/alertmanager/config.yml'
    - '--storage.path=/alertmanager'
    networks:
      - frontend




networks:
  frontend:
  
volumes:
    prometheus_data:
    grafana_data:
    data:
    alertmanager-data:
